(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{367:function(t,e,a){"use strict";a.r(e);var r=a(25),_=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"微前端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#微前端"}},[t._v("#")]),t._v(" 微前端")]),t._v(" "),a("p",[a("strong",[t._v("微前端")]),t._v("架构是一种类似于"),a("em",[t._v("微服务")]),t._v("的架构，它将"),a("em",[t._v("微服务")]),t._v("的理念应用于前端浏览器，即将"),a("code",[t._v("Web")]),t._v("应用由单一的单体应用转变为"),a("strong",[t._v("多个小型前端应用聚合为一的应用")])]),t._v(" "),a("h2",{attrs:{id:"作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用"}},[t._v("#")]),t._v(" 作用")]),t._v(" "),a("p",[t._v("小型前端应用可以"),a("strong",[t._v("独立运行、独立开发、独立部署")])]),t._v(" "),a("h3",{attrs:{id:"问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[t._v("#")]),t._v(" 问题")]),t._v(" "),a("ul",[a("li",[t._v("复用别的项目(部分)模块【模块共用难】\n解决不同技术选型，不同版本、不同"),a("code",[t._v("UI")]),t._v("等基础构建，如果只是简单拷贝相同模块会导致更新、维护很麻烦。")]),t._v(" "),a("li",[t._v("巨无霸项目(巨石应用)的自由拆分组合【项目管理难】\n"),a("ul",[a("li",[t._v("代码越来越多，打包越来越慢，部署升级麻烦，插件的升级和公共组件的修改需要考虑很多问题，容易牵一发而动全身")]),t._v(" "),a("li",[t._v("项目太大，参与人员越多，代码规范比较难管理，代码冲突也频繁")]),t._v(" "),a("li",[t._v("产品功能齐全，但是客户往往只需要其中的部分功能。剥离不需要的代码后，需要独立制定版本，独立维护，增加人力成本")])])])]),t._v(" "),a("h3",{attrs:{id:"优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[t._v("#")]),t._v(" 优点")]),t._v(" "),a("ol",[a("li",[t._v("技术栈无关，各个子项目可以自由选择框架，可以自己制定开发规范。")]),t._v(" "),a("li",[t._v("快速打包，独立部署，互不影响，升级简单。")]),t._v(" "),a("li",[t._v("可以很方便的复用已有的功能模块，避免重复开发。")])]),t._v(" "),a("h2",{attrs:{id:"常见解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见解决方案"}},[t._v("#")]),t._v(" 常见解决方案")]),t._v(" "),a("ol",[a("li",[t._v("使用"),a("code",[t._v("http")]),t._v("服务器的重定向跳转多个应用(也就是链接跳转)")]),t._v(" "),a("li",[t._v("在不同的框架之上设计通讯、加载机制，如"),a("code",[t._v("Single-spa")]),t._v("、"),a("code",[t._v("qiankun")])]),t._v(" "),a("li",[a("code",[t._v("iframe")]),t._v(";使用"),a("code",[t._v("iframe")]),t._v("及自定义消息传递机制")])]),t._v(" "),a("p",[t._v("比较常见的解决方案是："),a("code",[t._v("iframe")]),t._v("和"),a("code",[t._v("single-spa")])]),t._v(" "),a("h3",{attrs:{id:"iframe方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#iframe方案"}},[t._v("#")]),t._v(" "),a("code",[t._v("iframe")]),t._v("方案")]),t._v(" "),a("h2",{attrs:{id:"技术难点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#技术难点"}},[t._v("#")]),t._v(" 技术难点")]),t._v(" "),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000015566927",target:"_blank",rel:"noopener noreferrer"}},[t._v("实施微前端的六种方式"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5ebbd2986fb9a0432f0fff86",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于 qiankun 的微前端最佳实践"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5ed73b73e51d4578724e3fa4#heading-29",target:"_blank",rel:"noopener noreferrer"}},[t._v("qiankun 微前端方案实践及总结"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=_.exports}}]);